/*
 * This file is generated by jOOQ.
 */
package com.alo.sqllibscomparison.infrastructure.jooq.generated.tables.records;


import com.alo.sqllibscomparison.infrastructure.jooq.generated.enums.TaskStatus;
import com.alo.sqllibscomparison.infrastructure.jooq.generated.tables.Task;

import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record7<UUID, UUID, String, Short, TaskStatus, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = -1333080415;

    /**
     * Setter for <code>public.task.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.task.todo_list_id</code>.
     */
    public void setTodoListId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task.todo_list_id</code>.
     */
    public UUID getTodoListId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.task.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.task.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.task.position</code>.
     */
    public void setPosition(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.task.position</code>.
     */
    public Short getPosition() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.task.status</code>.
     */
    public void setStatus(TaskStatus value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.task.status</code>.
     */
    public TaskStatus getStatus() {
        return (TaskStatus) get(4);
    }

    /**
     * Setter for <code>public.task.created</code>.
     */
    public void setCreated(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.task.created</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.task.updated</code>.
     */
    public void setUpdated(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.task.updated</code>.
     */
    public OffsetDateTime getUpdated() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, Short, TaskStatus, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, String, Short, TaskStatus, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Task.TASK.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Task.TASK.TODO_LIST_ID;
    }

    @Override
    public Field<String> field3() {
        return Task.TASK.NAME;
    }

    @Override
    public Field<Short> field4() {
        return Task.TASK.POSITION;
    }

    @Override
    public Field<TaskStatus> field5() {
        return Task.TASK.STATUS;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Task.TASK.CREATED;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return Task.TASK.UPDATED;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getTodoListId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Short component4() {
        return getPosition();
    }

    @Override
    public TaskStatus component5() {
        return getStatus();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreated();
    }

    @Override
    public OffsetDateTime component7() {
        return getUpdated();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getTodoListId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Short value4() {
        return getPosition();
    }

    @Override
    public TaskStatus value5() {
        return getStatus();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreated();
    }

    @Override
    public OffsetDateTime value7() {
        return getUpdated();
    }

    @Override
    public TaskRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TaskRecord value2(UUID value) {
        setTodoListId(value);
        return this;
    }

    @Override
    public TaskRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public TaskRecord value4(Short value) {
        setPosition(value);
        return this;
    }

    @Override
    public TaskRecord value5(TaskStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public TaskRecord value6(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public TaskRecord value7(OffsetDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public TaskRecord values(UUID value1, UUID value2, String value3, Short value4, TaskStatus value5, OffsetDateTime value6, OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(UUID id, UUID todoListId, String name, Short position, TaskStatus status, OffsetDateTime created, OffsetDateTime updated) {
        super(Task.TASK);

        set(0, id);
        set(1, todoListId);
        set(2, name);
        set(3, position);
        set(4, status);
        set(5, created);
        set(6, updated);
    }
}
